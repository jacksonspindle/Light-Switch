/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Canvas } from '@react-three/fiber'
import { LoopOnce } from 'three'
import { LoopPingPong } from 'three'
import { LoopRepeat } from 'three'

export default function LightSwitch({ lightStateChanger,...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/lightSwitch.gltf')
  const { actions } = useAnimations(animations, group)
  const [lightOn, setLightOn] = useState(true)


  return (
    <group ref={group} {...props} dispose={null} rotation={[0, .9, 0]}>
      <group>
        <group name="Cube" position={[0,0,0]} rotation={[0, -1.56, 0]} scale={[0.94, 1.54, 0.14]}>
          <mesh geometry={nodes.Cube_1.geometry} material={materials.screw} />
          <mesh geometry={nodes.Cube_2.geometry} material={materials.switchBody} />
        </group>
        <mesh onClick={() => {

          setLightOn(!lightOn)

          if (lightOn == true){
            console.log("Light On")
             actions.toggleLightSwitch.play()
             actions.toggleLightSwitch.setLoop(LoopOnce, 1)
            lightStateChanger(.9)

            setTimeout(function() {actions.toggleLightSwitch.paused = true}, 1500)

          } else if (lightOn == false){
            console.log("ligh off!")
            lightStateChanger(.1)
            actions.toggleLightSwitch.paused = false
            setTimeout(function() {actions.toggleLightSwitch.stop()}, 2500)
          }

          }} name="Cube001" geometry={nodes.Cube001.geometry} material={materials['switch']} position={[0,0,0]} rotation={[-1.59, -0.67, 1.56]} scale={[0.94, 1.54, 0.14]} />
        <mesh geometry={nodes.Cube002.geometry} material={materials.Material} position={[0,0,0]} rotation={[-1.63, -1.3, 1.52]} scale={[0.92, 1.76, 0.14]} />
      </group>
    </group>
  )
}

useGLTF.preload('/lightSwitch.gltf')
